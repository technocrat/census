var documenterSearchIndex = {"docs":
[{"location":"api/core/#Core-Functions","page":"Core Functions","title":"Core Functions","text":"","category":"section"},{"location":"api/core/","page":"Core Functions","title":"Core Functions","text":"This section documents the core functionality of Census.jl.","category":"page"},{"location":"api/core/#Module-Overview","page":"Core Functions","title":"Module Overview","text":"","category":"section"},{"location":"api/core/","page":"Core Functions","title":"Core Functions","text":"Census","category":"page"},{"location":"api/core/#Census","page":"Core Functions","title":"Census","text":"Census\n\nA Julia package for analyzing alternatives for nation states to replace the existing United States. This package provides tools for analyzing various aspects of potential nation states, including:\n\nPopulation characteristics\nEconomic indicators\nPolitical structures\nHistorical context\nGeographic features\n\nThe package integrates with R's statistical packages and provides GIS functionality through various Julia packages.\n\nMain Features\n\nData processing and analysis tools\nVisualization capabilities using CairoMakie and GeoMakie\nIntegration with R's statistical packages\nGeographic information system (GIS) functionality\nPopulation analysis tools\n\nExample\n\nusing Census\n\n# Get population data for a state\nstate_pop = get_state_pop(\"CA\")\n\n# Create visualizations\nmap_poly(population_data)\n\n\n\n\n\n","category":"module"},{"location":"api/core/#Core-Functions-2","page":"Core Functions","title":"Core Functions","text":"","category":"section"},{"location":"api/core/","page":"Core Functions","title":"Core Functions","text":"valid_codes\nis_valid_postal_code\nget_state_name\nget_postal_code","category":"page"},{"location":"api/core/#Census.valid_codes","page":"Core Functions","title":"Census.valid_codes","text":"valid_codes() -> Vector{String}\n\nReturns a sorted vector of all valid U.S. postal codes.\n\nReturns\n\nA vector containing all valid two-letter postal codes for U.S. states and DC\n\nExamples\n\njulia> valid_codes()\n51-element Vector{String}:\n \"AK\"\n \"AL\"\n \"AR\"\n ⋮\n \"WI\"\n \"WV\"\n \"WY\"\n\n\n\n\n\n","category":"function"},{"location":"api/core/#Census.is_valid_postal_code","page":"Core Functions","title":"Census.is_valid_postal_code","text":"is_valid_postal_code(code::AbstractString) -> Bool\n\nCheck if a given string is a valid U.S. postal code.\n\nArguments\n\ncode::AbstractString: The postal code to validate\n\nReturns\n\ntrue if the code is valid, false otherwise\n\nExamples\n\njulia> is_valid_postal_code(\"CA\")\ntrue\n\njulia> is_valid_postal_code(\"XX\")\nfalse\n\n\n\n\n\n","category":"function"},{"location":"api/core/#Census.get_state_name","page":"Core Functions","title":"Census.get_state_name","text":"get_state_name(code::AbstractString) -> String\n\nGet the full state name for a given postal code.\n\nArguments\n\ncode::AbstractString: A valid U.S. postal code\n\nReturns\n\nThe full state name as a string\n\nThrows\n\nArgumentError if the code is not valid\n\nExamples\n\njulia> get_state_name(\"CA\")\n\"California\"\n\njulia> get_state_name(\"XX\")\nERROR: ArgumentError: Invalid postal code: XX\n\n\n\n\n\n","category":"function"},{"location":"api/core/#Census.get_postal_code","page":"Core Functions","title":"Census.get_postal_code","text":"get_postal_code(state_name::AbstractString) -> String\n\nGet the postal code for a given state name.\n\nArguments\n\nstate_name::AbstractString: The full name of a U.S. state\n\nReturns\n\nThe two-letter postal code as a string\n\nThrows\n\nArgumentError if the state name is not valid\n\nExamples\n\njulia> get_postal_code(\"California\")\n\"CA\"\n\njulia> get_postal_code(\"Not a State\")\nERROR: ArgumentError: Invalid state name: Not a State\n\n\n\n\n\n","category":"function"},{"location":"api/visualization/#Visualization","page":"Visualization","title":"Visualization","text":"","category":"section"},{"location":"api/visualization/","page":"Visualization","title":"Visualization","text":"This section covers the visualization capabilities of Census.jl.","category":"page"},{"location":"api/data_processing/#Data-Processing","page":"Data Processing","title":"Data Processing","text":"","category":"section"},{"location":"api/data_processing/","page":"Data Processing","title":"Data Processing","text":"This section covers the data processing and analysis functionality of Census.jl.","category":"page"},{"location":"api/data_processing/#Data-Manipulation","page":"Data Processing","title":"Data Manipulation","text":"","category":"section"},{"location":"api/data_processing/","page":"Data Processing","title":"Data Processing","text":"add_margins\nadd_row_margins\nadd_col_margins","category":"page"},{"location":"api/data_processing/#Census.add_margins","page":"Data Processing","title":"Census.add_margins","text":"add_margins(df::DataFrame; \n            margin_row_name=\"Total\", \n            margin_col_name=\"Total\",\n            cols_to_sum=nothing) -> DataFrame\n\nAdd row and column totals (margins) to a DataFrame containing numeric data.\n\nArguments\n\ndf::DataFrame: Input DataFrame with numeric columns\nmargin_row_name::String=\"Total\": Label for the row margin (column totals)\nmargin_col_name::String=\"Total\": Label for the column margin (row totals)\ncols_to_sum::Union{Nothing,Vector{Symbol}}=nothing: Specific columns to sum (default: all numeric columns)\n\nReturns\n\nDataFrame: A new DataFrame with:\nOriginal data\nRow totals in a new column (margincolname)\nColumn totals in a new row (marginrowname)\nGrand total in bottom-right cell\n\nExample\n\ndf = DataFrame(\n    region = [\"North\", \"South\"],\n    sales_2021 = [100, 200],\n    sales_2022 = [150, 250]\n)\nadd_margins(df)\n# Returns:\n# 3×4 DataFrame\n#  Row │ region  sales_2021  sales_2022  Total\n#      │ String  Int64       Int64       Int64\n# ─────┼────────────────────────────────────────\n#    1 │ North         100         150     250\n#    2 │ South         200         250     450\n#    3 │ Total         300         400     700\n\nNotes\n\nCreates a copy of the input DataFrame\nAutomatically detects numeric columns if colstosum is nothing\nPreserves non-numeric columns in the margin row\nHandles missing values (they are treated as 0 in sums)\nThread-safe (no mutation of input DataFrame)\n\n\n\n\n\n","category":"function"},{"location":"api/data_processing/#Census.add_row_margins","page":"Data Processing","title":"Census.add_row_margins","text":"add_row_margins(df::DataFrame; \n                margin_col_name=\"Total\",\n                cols_to_sum=nothing) -> DataFrame\n\nAdd row totals (horizontal sums) to a DataFrame containing numeric data.\n\nArguments\n\ndf::DataFrame: Input DataFrame with numeric columns\nmargin_col_name::String=\"Total\": Name for the new totals column\ncols_to_sum::Union{Nothing,Vector{Symbol}}=nothing: Specific columns to sum (default: all numeric columns)\n\nReturns\n\nDataFrame: A new DataFrame with an additional column containing row totals\n\nExample\n\ndf = DataFrame(\n    product = [\"A\", \"B\"],\n    q1 = [100, 150],\n    q2 = [120, 160],\n    q3 = [110, 170]\n)\nadd_row_margins(df)\n# Returns:\n# 2×5 DataFrame\n#  Row │ product  q1    q2    q3    Total\n#      │ String   Int64 Int64 Int64 Int64\n# ─────┼─────────────────────────────────\n#    1 │ A         100   120   110    330\n#    2 │ B         150   160   170    480\n\nNotes\n\nCreates a copy of the input DataFrame\nOnly adds horizontal totals (no column totals)\nAutomatically detects numeric columns if colstosum is nothing\nThread-safe (no mutation of input DataFrame)\nUseful for row-wise analysis without column totals\n\n\n\n\n\n","category":"function"},{"location":"api/data_processing/#Census.add_col_margins","page":"Data Processing","title":"Census.add_col_margins","text":"add_col_margins(df::DataFrame; \n                 margin_row_name=\"Total\",\n                 cols_to_sum=nothing) -> DataFrame\n\nAdd column totals (vertical sums) to a DataFrame containing numeric data.\n\nArguments\n\ndf::DataFrame: Input DataFrame with numeric columns\nmargin_row_name::String=\"Total\": Label for the totals row\ncols_to_sum::Union{Nothing,Vector{Symbol}}=nothing: Specific columns to sum (default: all numeric columns)\n\nReturns\n\nDataFrame: A new DataFrame with an additional row containing column totals\n\nExample\n\ndf = DataFrame(\n    region = [\"East\", \"West\", \"North\"],\n    revenue = [1000, 1200, 800],\n    costs = [800, 900, 600]\n)\nadd_col_margins(df)\n# Returns:\n# 4×3 DataFrame\n#  Row │ region  revenue  costs\n#      │ String  Int64    Int64\n# ─────┼──────────────────────\n#    1 │ East      1000    800\n#    2 │ West      1200    900\n#    3 │ North      800    600\n#    4 │ Total     3000   2300\n\nNotes\n\nCreates a copy of the input DataFrame\nOnly adds vertical totals (no row totals)\nAutomatically detects numeric columns if colstosum is nothing\nPreserves non-numeric columns in the margin row\nThread-safe (no mutation of input DataFrame)\nUseful for column-wise analysis without row totals\n\n\n\n\n\n","category":"function"},{"location":"tutorials/economics/#Economic-Analysis","page":"Economic Analysis","title":"Economic Analysis","text":"","category":"section"},{"location":"tutorials/economics/","page":"Economic Analysis","title":"Economic Analysis","text":"This tutorial covers how to analyze economic characteristics of potential nation states using Census.jl.","category":"page"},{"location":"tutorials/economics/#GDP-Analysis","page":"Economic Analysis","title":"GDP Analysis","text":"","category":"section"},{"location":"tutorials/economics/","page":"Economic Analysis","title":"Economic Analysis","text":"Analyze GDP data for potential nation states:","category":"page"},{"location":"tutorials/economics/","page":"Economic Analysis","title":"Economic Analysis","text":"using Census\n\n# Get GDP data for a nation state\nnation_gdp = make_nation_state_gdp_df(\"Pacific\")\n\n# Process and analyze economic data\nprocessed_data = process(gdp_data)\nanalysis_results = analysis(processed_data)","category":"page"},{"location":"tutorials/economics/#Regional-Economic-Analysis","page":"Economic Analysis","title":"Regional Economic Analysis","text":"","category":"section"},{"location":"tutorials/economics/","page":"Economic Analysis","title":"Economic Analysis","text":"Analyze economic patterns across different regions:","category":"page"},{"location":"tutorials/economics/","page":"Economic Analysis","title":"Economic Analysis","text":"using Census\n\n# Get economic data for specific regions\nwestern_econ = get_geo_pop(get_western_geoids())\neastern_econ = get_geo_pop(get_eastern_geoids())\ncolorado_basin_econ = get_geo_pop(get_colorado_basin_geoids())","category":"page"},{"location":"tutorials/economics/#Economic-Visualization","page":"Economic Analysis","title":"Economic Visualization","text":"","category":"section"},{"location":"tutorials/economics/","page":"Economic Analysis","title":"Economic Analysis","text":"Create visualizations of economic data:","category":"page"},{"location":"tutorials/economics/","page":"Economic Analysis","title":"Economic Analysis","text":"using Census\nusing CairoMakie\n\n# Create economic maps\nmap_poly(economic_data)\n\n# Add labels and create legends\nadd_labels(map)\nmake_legend(map)","category":"page"},{"location":"tutorials/economics/#Advanced-Economic-Analysis","page":"Economic Analysis","title":"Advanced Economic Analysis","text":"","category":"section"},{"location":"tutorials/economics/","page":"Economic Analysis","title":"Economic Analysis","text":"Perform more complex economic analysis:","category":"page"},{"location":"tutorials/economics/","page":"Economic Analysis","title":"Economic Analysis","text":"using Census\n\n# Process economic indicators\nindicators = process(economic_data)\n\n# Create economic growth tables\ngrowth_table = make_growth_table(indicators)\n\n# Add row totals for economic summaries\ntotals = add_row_totals(economic_data)","category":"page"},{"location":"tutorials/economics/#Integration-with-Geographic-Data","page":"Economic Analysis","title":"Integration with Geographic Data","text":"","category":"section"},{"location":"tutorials/economics/","page":"Economic Analysis","title":"Economic Analysis","text":"Combine economic and geographic analysis:","category":"page"},{"location":"tutorials/economics/","page":"Economic Analysis","title":"Economic Analysis","text":"using Census\n\n# Get economic data for specific geographic areas\nslope_econ = get_geo_pop(get_slope_geoids())\nsouthern_kansas_econ = get_geo_pop(get_southern_kansas_geoids())\n\n# Create visualizations of regional economic patterns\nmap_poly(regional_economic_data)","category":"page"},{"location":"tutorials/economics/","page":"Economic Analysis","title":"Economic Analysis","text":"","category":"page"},{"location":"tutorials/getting_started/#Getting-Started-with-Census.jl","page":"Getting Started","title":"Getting Started with Census.jl","text":"","category":"section"},{"location":"tutorials/getting_started/","page":"Getting Started","title":"Getting Started","text":"This guide will help you get started with Census.jl for analyzing potential nation states.","category":"page"},{"location":"tutorials/getting_started/#Installation","page":"Getting Started","title":"Installation","text":"","category":"section"},{"location":"tutorials/getting_started/","page":"Getting Started","title":"Getting Started","text":"First, make sure you have Julia installed on your system. Then, you can install Census.jl using Julia's package manager:","category":"page"},{"location":"tutorials/getting_started/","page":"Getting Started","title":"Getting Started","text":"using Pkg\nPkg.add(\"Census\")","category":"page"},{"location":"tutorials/getting_started/#Basic-Usage","page":"Getting Started","title":"Basic Usage","text":"","category":"section"},{"location":"tutorials/getting_started/","page":"Getting Started","title":"Getting Started","text":"Here's a simple example of how to use Census.jl:","category":"page"},{"location":"tutorials/getting_started/","page":"Getting Started","title":"Getting Started","text":"using Census\n\n# Get state information\nstate_codes = valid_codes()\nstate_name = get_state_name(\"CA\")\n\n# Check if a code is valid\nis_valid = is_valid_postal_code(\"CA\")","category":"page"},{"location":"tutorials/getting_started/#Data-Processing","page":"Getting Started","title":"Data Processing","text":"","category":"section"},{"location":"tutorials/getting_started/","page":"Getting Started","title":"Getting Started","text":"Census.jl provides tools for data manipulation:","category":"page"},{"location":"tutorials/getting_started/","page":"Getting Started","title":"Getting Started","text":"using Census\n\n# Add margins to your data\ndf_with_margins = add_margins(your_data)\ndf_with_row_margins = add_row_margins(your_data)\ndf_with_col_margins = add_col_margins(your_data)","category":"page"},{"location":"tutorials/getting_started/#Working-with-Geographic-Data","page":"Getting Started","title":"Working with Geographic Data","text":"","category":"section"},{"location":"tutorials/getting_started/","page":"Getting Started","title":"Getting Started","text":"Census.jl provides powerful tools for geographic analysis:","category":"page"},{"location":"tutorials/getting_started/","page":"Getting Started","title":"Getting Started","text":"using Census\n\n# Get geographic population data\ngeo_pop = get_geo_pop(\"CA\")\n\n# Work with specific regions\nwestern_geoids = get_western_geoids()\neastern_geoids = get_eastern_geoids()","category":"page"},{"location":"tutorials/getting_started/#Visualization","page":"Getting Started","title":"Visualization","text":"","category":"section"},{"location":"tutorials/getting_started/","page":"Getting Started","title":"Getting Started","text":"Create visualizations of your data:","category":"page"},{"location":"tutorials/getting_started/","page":"Getting Started","title":"Getting Started","text":"using Census\nusing CairoMakie\n\n# Create age pyramids\ncreate_multiple_age_pyramids(data, states)\n\n# Create maps\nmap_poly(your_data)","category":"page"},{"location":"tutorials/getting_started/#Next-Steps","page":"Getting Started","title":"Next Steps","text":"","category":"section"},{"location":"tutorials/getting_started/","page":"Getting Started","title":"Getting Started","text":"Check out the Core Functions documentation for more details\nLearn about data processing capabilities\nExplore the visualization tools ","category":"page"},{"location":"#Census.jl-Documentation","page":"Home","title":"Census.jl Documentation","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"Welcome to the documentation for Census.jl, a Julia package for analyzing alternatives for nation states to replace the existing United States.","category":"page"},{"location":"#Overview","page":"Home","title":"Overview","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"Census.jl provides tools and functionality for analyzing various aspects of potential nation states, including:","category":"page"},{"location":"","page":"Home","title":"Home","text":"Population characteristics\nEconomic indicators\nPolitical structures\nHistorical context\nGeographic features","category":"page"},{"location":"#Features","page":"Home","title":"Features","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"Data processing and analysis tools\nVisualization capabilities\nIntegration with R's statistical packages\nGeographic information system (GIS) functionality\nPopulation analysis tools","category":"page"},{"location":"#Installation","page":"Home","title":"Installation","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"To install Census.jl, use Julia's package manager:","category":"page"},{"location":"","page":"Home","title":"Home","text":"using Pkg\nPkg.add(\"Census\")","category":"page"},{"location":"#Quick-Start","page":"Home","title":"Quick Start","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"using Census\n\n# Example of basic usage\n# Add a simple example here once core functionality is stable","category":"page"},{"location":"#Contents","page":"Home","title":"Contents","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"Pages = [\n    \"api/core.md\",\n    \"api/data_processing.md\",\n    \"api/visualization.md\",\n    \"tutorials/getting_started.md\",\n    \"tutorials/population.md\",\n    \"tutorials/economics.md\"\n]\nDepth = 2","category":"page"},{"location":"","page":"Home","title":"Home","text":"","category":"page"},{"location":"tutorials/population/#Population-Analysis","page":"Population Analysis","title":"Population Analysis","text":"","category":"section"},{"location":"tutorials/population/","page":"Population Analysis","title":"Population Analysis","text":"This tutorial covers how to analyze population characteristics using Census.jl.","category":"page"},{"location":"tutorials/population/#Age-Distribution-Analysis","page":"Population Analysis","title":"Age Distribution Analysis","text":"","category":"section"},{"location":"tutorials/population/","page":"Population Analysis","title":"Population Analysis","text":"Census.jl provides tools for analyzing age distributions across different regions:","category":"page"},{"location":"tutorials/population/","page":"Population Analysis","title":"Population Analysis","text":"using Census\n\n# Get US age distribution\nus_ages = get_us_ages()\n\n# Get childbearing population data\nchildbearing_pop = get_childbearing_population(\"CA\")\n\n# Create age pyramids for multiple states\nstates = [\"CA\", \"NY\", \"TX\"]\nage_data = collect_state_age_dataframes(states)\ncreate_multiple_age_pyramids(age_data, states)","category":"page"},{"location":"tutorials/population/#Population-Growth-Analysis","page":"Population Analysis","title":"Population Growth Analysis","text":"","category":"section"},{"location":"tutorials/population/","page":"Population Analysis","title":"Population Analysis","text":"Analyze population growth trends:","category":"page"},{"location":"tutorials/population/","page":"Population Analysis","title":"Population Analysis","text":"using Census\n\n# Create growth tables\ngrowth_table = make_growth_table(data)\n\n# Analyze nation state population\nnation_pop = make_nation_state_pop_df(\"Pacific\")","category":"page"},{"location":"tutorials/population/#Geographic-Population-Analysis","page":"Population Analysis","title":"Geographic Population Analysis","text":"","category":"section"},{"location":"tutorials/population/","page":"Population Analysis","title":"Population Analysis","text":"Analyze population distribution across geographic regions:","category":"page"},{"location":"tutorials/population/","page":"Population Analysis","title":"Population Analysis","text":"using Census\n\n# Get population data for specific geographic areas\nwestern_pop = get_geo_pop(get_western_geoids())\neastern_pop = get_geo_pop(get_eastern_geoids())\ncolorado_basin_pop = get_geo_pop(get_colorado_basin_geoids())","category":"page"},{"location":"tutorials/population/#Visualization-and-Mapping","page":"Population Analysis","title":"Visualization and Mapping","text":"","category":"section"},{"location":"tutorials/population/","page":"Population Analysis","title":"Population Analysis","text":"Create visualizations of population data:","category":"page"},{"location":"tutorials/population/","page":"Population Analysis","title":"Population Analysis","text":"using Census\nusing CairoMakie\n\n# Create population maps\nmap_poly(population_data)\n\n# Add labels and legends\nadd_labels(map)\nmake_legend(map)","category":"page"},{"location":"tutorials/population/#Advanced-Analysis","page":"Population Analysis","title":"Advanced Analysis","text":"","category":"section"},{"location":"tutorials/population/","page":"Population Analysis","title":"Population Analysis","text":"Perform more complex population analysis:","category":"page"},{"location":"tutorials/population/","page":"Population Analysis","title":"Population Analysis","text":"using Census\n\n# Query detailed age statistics\nstate_ages = query_state_ages(state)\nnation_ages = query_nation_ages(nation)\n\n# Process and analyze data\nprocessed_data = process(raw_data)\nanalysis_results = analysis(processed_data)","category":"page"},{"location":"tutorials/population/","page":"Population Analysis","title":"Population Analysis","text":"","category":"page"}]
}
