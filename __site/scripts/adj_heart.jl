# SPDX-License-Identifier: MIT

rejig       = copy(Census.heartland)
push!(rejig,"IL","WI","MI")
df          = get_geo_pop(rejig)
DataFrames.rename!(df, [:geoid, :stusps, :county, :geom, :pop])
RSetup.setup_r_environment()
breaks      = RCall.rcopy(get_breaks(df,5))
df.pop_bins = my_cut(df.pop, breaks[:kmeans][:brks])
peninsula = ["26053", "26131", "26061", "26083", "26013", "26071", "26103",
        "26003", "26109", "26041", "26053", "26956", "26976", "26033",
        "26043", "26053", "26095", "26097", "20033", "26043", "26053",
        "26153", "26069", "26001", "26007"]
missouri_river_basin = ["30005", "30007", "30013", "30015", "30017",
    "30021", "30027", "30033", "30041", "30045",
    "30049", "30051", "30055", "30059", "30069",
    "30071", "30075", "30079", "30083", "30085",
    "30087", "30091", "30099", "30101", "30105",
    "30109", "38001", "38007", "38011", "38013",
    "38015", "38023", "38025", "38029", "38033",
    "38037", "38041", "38053", "38055", "38057",
    "38059", "38061", "38065", "38085", "38087",
    "38089", "38101", "38105", "46003", "46005",
    "46007", "46009", "46011", "46013", "46015",
    "46017", "46019", "46021", "46023", "46025",
    "46029", "46031", "46033", "46035", "46037",
    "19001", "19003", "31001", "29003", "31003",
    "31005", "29005", "19009", "31007", "27011",
    "31009", "31011", "31013", "31015", "31017",
    "29021", "31019", "31021", "31023", "19027",
    "29033", "19029", "31025", "31027", "29041",
    "31029", "19035", "31031", "31033", "27023",
    "29045", "19039", "31035", "29051", "31037",
    "29053", "19047", "31039", "31041", "31043",
    "19049", "31045", "31047", "31049", "31051",
    "31053", "31055", "31057", "31059", "29071",
    "31061", "19071", "31063", "31065", "31067",
    "31069", "31071", "29073", "31073", "31075",
    "31077", "19073", "19077", "31079", "31081",
    "31083", "19085", "31085", "31087", "29087",
    "31089", "31091", "29089", "31093", "19093",
    "29095", "29099", "31095", "31097", "31099",
    "31101", "31103", "31105", "31107", "27073",
    "31109", "29111", "27081", "29113", "31111",
    "31113", "31115", "31119", "29127", "31117",
    "31121", "19129", "29135", "19133", "19137",
    "29139", "31123", "27101", "31125", "31127",
    "27105", "31129", "29151", "31131", "19145",
    "31133", "31135", "31137", "31139",
    "29163", "27117", "29165", "31141", "19149",
    "31143", "19155", "29173", "31145", "27127",
    "31147", "19159", "27133", "31149", "19161",
    "29195", "31151", "31153", "31155", "31157",
    "31159", "19165", "31161", "31163", "19167",
    "31165", "29183", "29189", "31167", "27151",
    "19173", "31169", "31171", "31173", "27155",
    "19175", "31175", "29219", "29221", "31177",
    "31179", "31181", "31183", "19193", "27173",
    "31185", "30019"]
mo_basin_ia = ["19119", "19143", "19167", "19141", "19077",
    "19149", "19047", "19035", "19151", "19041",
    "19193", "19071", "19173", "19021", "19093",
    "19161", "19133", "19145", "19085", "19165",
    "19009", "19155", "19029", "19129", "19137",
    "19003", "19059"]
ms_basin_ia = ["19043", "19007", "19005", "19195", "19045",
    "19055", "19189", "19125", "19073", "19027",
    "19117", "19051", "19157", "19177", "19123",
    "19099", "19163", "19063", "19187", "19013",
    "19135", "19017", "19069", "19127", "19109",
    "19019", "19103", "19159", "19097", "19171",
    "19025", "19057", "19075", "19033", "19083",
    "19147", "19111", "19023", "19179", "19087", "19065",
    "19183", "19061", "19031", "19101", "19079", "19107",
    "19153", "19049", "19001", "19131", "19011", "19175",
    "19067", "19039", "19037", "19015", "19091", "19139",
    "19089", "19191", "19169", "19081", "19121", "19197",
    "19053", "19185", "19105", "19113", "19095", "19115",
    "19181"]
mo_basin_mn = ["27117", "27133", "27195","27083"]
mo_basin_mo = ["29005", "29087", "29147", "29003", "29021",
    "29165", "29047", "29049", "29063", "29075",
    "29177", "29025", "29061", "29081", "29041",
    "29089", "29175", "29121", "29001", "29197",
    "29027", "29007", "29137", "29205", "29227",
    "29019", "29139", "29163", "29173", "29127",
    "29111", "29045", "29183", "29189", "28510",
    "29027", "29129", "29079", "29117", "29033",
    "29171", "29211", "29115", "29199", "29103",
    "29510", "29219", "25215"]
ms_basin_mo = ["29071","29099", "29221", 
    "29179", "29031", "29207", "29069",
    "29155", "29143", "29133", "29201", "29017",
    "29179", "29187", "29123", "29186",
    "29157"]

ms_basin_mo   = ["29071","29065","29099","29221","29093",
    "29179","29031","29223","29207","29069",
    "29155","29143","29133","29201","29017",
    "29179","29187","29123","29186",
    "29157"]
ar_basin_mo   = ["29011","29145","29119","29109","29009",
    "29077","29043","29209","29113","29067",
    "29227","29997","29153","29091","29149",
    "29181","29213","29017","29123","29187",
    "29097"]
lower_ms_mo = setdiff(ms_basin_mo,get_geo_pop(["MO"]).geoid)

# Convert WKT strings to geometric objects
df.parsed_geoms = parse_geoms(df)

df          = filter(:stusps  => x -> x != "KS",df)
df          = filter(:stusps  => x -> x != "ND",df)
df          = filter(:stusps  => x -> x != "SD",df)

df          = filter(:geoid  => x -> x ∉ missouri_river_basin,df)
df          = filter(:geoid  => x -> x ∉ setdiff(get_geo_pop(["MI"]).geoid,peninsula),df)
df          = filter(:geoid  => x -> x ∉ mo_basin_ia,df)
df          = filter(:geoid  => x -> x ∉ mo_basin_mn,df)

# Keep MS basin and lower MS counties in MO while excluding other MO counties
df = filter(row -> begin
    # Keep all non-MO counties
    !startswith(row.geoid, "29") || # 29 is MO state FIPS code
    # Keep specific MO counties we want (ms_basin_mo and lower_ms_mo)
    row.geoid in ms_basin_mo || 
    row.geoid in lower_ms_mo
end, df)



df.parsed_geoms = parse_geoms(df)

dest = "+proj=aea +lat_0=40 +lon_0=-94 +lat_1=35 +lat_2=45 +datum=NAD83 +units=m +no_defs"
# Create figure
fig = Figure(size=(2400, 1600), fontsize=22)

map_poly(df, "Adjusted Hearlandia", dest, fig)
# Display the figure

display(fig)




